image: docker:latest
services:
  - docker:dind

stages:
  - test
  - build
  - package
  - deploy

test-variables:
  stage: test
  needs: []
  script:
    - echo "${CI_COMMIT_TAG}"
    - echo "${REGISTRY_HOST}"
    - echo "${REGISTRY_USERNAME}"
    - echo "${REGISTRY_PASSWORD}"

maven-tests:
  image: maven:3.8.5-openjdk-17
  stage: test
  script: "mvn clean test -B"
  rules:
    - if: $CI_COMMIT_TAG
      when: never

maven-build:
  image: maven:3.8.5-openjdk-17
  stage: build
  needs: ["test-variables"]
  script: "mvn clean package -B -DskipTests"
  artifacts:
    expire_in: 24 hours
    paths:
      - target/*.jar
  only:
    - tags

docker-build:
  stage: package
  needs: ["maven-build"]
  script:
    - docker build -t ${REGISTRY_HOST}/base-kotlin-project:${CI_COMMIT_TAG} .
    - docker login -u ${REGISTRY_USERNAME} -p ${REGISTRY_PASSWORD} ${REGISTRY_HOST}
    - docker push ${REGISTRY_HOST}/base-kotlin-project:${CI_COMMIT_TAG}
    - docker logout ${REGISTRY_HOST}
  only:
    - tags

stage-deploy:
  stage: deploy
  needs: ["docker-build"]
  before_script:
    - 'which ssh-agent || ( apt update -y && apt install openssh-client bash -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - echo "${SSH_KEY}" | tr -d '\r' | ssh-add - > /dev/null
  script:
    - ssh -p22 ${SERVER_USER}@${SERVER_URL} "sed -i \"s/version=.*$/version=${CI_COMMIT_TAG}/\" /opt/base-kotlin-project/.env"
    - ssh -p22 ${SERVER_USER}@${SERVER_URL} "docker-compose -f /opt/base-kotlin-project/docker-compose.yml down"
    - ssh -p22 ${SERVER_USER}@${SERVER_URL} "docker-compose -f /opt/base-kotlin-project/docker-compose.yml up -d"
  only:
    - tags

cache:
  key: ${CI_COMMIT_SHORT_SHA}
  paths:
    - .m2/

variables:
  MAVEN_OPTS: -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2